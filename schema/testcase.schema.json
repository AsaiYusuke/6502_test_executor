{
    "$schema": "http://json-schema.org/schema",
    "type": "object",
    "required": [
        "target",
        "cases"
    ],
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "type": "string"
        },
        "target": {
            "title": "Test target",
            "description": "Test target specifies the address to be set in the PC register at the start of the test.",
            "$ref": "#/definitions/address"
        },
        "cases": {
            "title": "Test cases",
            "description": "Test cases specify, for each test, the setup conditions and the expected conditions.",
            "type": "object",
            "minItems": 1,
            "patternProperties": {
                "additionalProperties": false,
                "^.*$": {
                    "title": "Test ID",
                    "description": "Test ID can be any string that uniquely identifies it in the file.",
                    "type": "object",
                    "required": [
                        "setup",
                        "expected"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "skip": {
                            "type": "boolean"
                        },
                        "setup": {
                            "title": "Setup condition",
                            "description": "Setup condition specifies the initial settings of the registers and memory at the start of the test.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/conditions"
                                }
                            ],
                            "properties": {
                                "register": {},
                                "memory": {
                                    "items": {
                                        "properties": {
                                            "readCount": {
                                                "type": "null"
                                            },
                                            "writeCount": {
                                                "type": "null"
                                            }
                                        }
                                    }
                                },
                                "timeout": {
                                    "type": "null"
                                }
                            }
                        },
                        "expected": {
                            "title": "Expected condition",
                            "description": "Expected Condition specifies the result of the registers and memory at the end of the test.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/conditions"
                                }
                            ],
                            "properties": {
                                "register": {},
                                "memory": {
                                    "items": {
                                        "properties": {
                                            "permanent": {
                                                "type": "null"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "config": {
            "title": "Configuration",
            "description": "Configuration specifies the customization parameters to be given to the testing tool.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timeout": {
                    "title": "Timeout threshold",
                    "description": "Timeout threshold specifies the threshold before the test becomes an error.\nUnit : Number of execution instructions\nDefault: 10000",
                    "type": "number",
                    "default": 10000,
                    "minimum": 1
                },
                "programFile": {
                    "title": "Program file path",
                    "description": "Program file path specifies the path of the program image file to be tested.",
                    "type": "string"
                },
                "debugFile": {
                    "title": "Debug file path",
                    "description": "Debug file path specifies the path of the debug information file used for testing.",
                    "type": "string"
                },
                "invalidMemory": {
                    "title": "Invalid memory control",
                    "description": "Invalid memory control specifies the behavior when an invalid memory access occurs.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enable": {
                            "title": "Enable",
                            "description": "Enable specifies whether or not to raise an error when an invalid memory access occurs.",
                            "type": "boolean",
                            "default": true
                        },
                        "ignoreList": {
                            "title": "Ignore list",
                            "description": "Ignore list specifies memory areas that are not controlled by invalid memory control.",
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "type": "object",
                                "oneOf": [
                                    {
                                        "required": [
                                            "start",
                                            "size"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "name"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "detect"
                                        ]
                                    }
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "start": {
                                        "$ref": "#/definitions/address"
                                    },
                                    "size": {
                                        "$ref": "#/definitions/number_16bit"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "detect": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "dependencies": {
                                    "start": {
                                        "properties": {
                                            "name": {
                                                "type": "null"
                                            },
                                            "detect": {
                                                "type": "null"
                                            }
                                        }
                                    },
                                    "size": {
                                        "properties": {
                                            "name": {
                                                "type": "null"
                                            },
                                            "detect": {
                                                "type": "null"
                                            }
                                        }
                                    },
                                    "name": {
                                        "properties": {
                                            "start": {
                                                "type": "null"
                                            },
                                            "size": {
                                                "type": "null"
                                            },
                                            "detect": {
                                                "type": "null"
                                            }
                                        }
                                    },
                                    "detect": {
                                        "properties": {
                                            "start": {
                                                "type": "null"
                                            },
                                            "size": {
                                                "type": "null"
                                            },
                                            "name": {
                                                "type": "null"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": [
                                {
                                    "start": {
                                        "address": "$100"
                                    },
                                    "size": "$FF"
                                },
                                {
                                    "start": {
                                        "address": "$2000"
                                    },
                                    "size": "$2020"
                                },
                                {
                                    "detect": true
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address": {
            "type": "object",
            "oneOf": [
                {
                    "required": [
                        "address"
                    ]
                },
                {
                    "required": [
                        "label"
                    ]
                }
            ],
            "properties": {
                "address": {
                    "title": "Address",
                    "description": "Address is expressed as a hexadecimal address value.",
                    "$ref": "#/definitions/number_16bit"
                },
                "label": {
                    "title": "Label",
                    "description": "Label specifies the symbol name written in the debug information file.",
                    "type": "string"
                },
                "offset": {
                    "title": "Offset",
                    "description": "The offset specifies the position relative to the point of the address indicated by the Label.",
                    "$ref": "#/definitions/number_8bit"
                }
            },
            "dependencies": {
                "address": {
                    "properties": {
                        "offset": {
                            "type": "null"
                        },
                        "label": {
                            "type": "null"
                        }
                    }
                },
                "label": {
                    "properties": {
                        "address": {
                            "type": "null"
                        }
                    }
                }
            }
        },
        "number_8bit": {
            "oneOf": [
                {
                    "type": "integer",
                    "minimum": -128,
                    "maximum": 255
                },
                {
                    "type": "string",
                    "pattern": "^\\$[0-9A-F]{1,2}$"
                },
                {
                    "type": "string",
                    "pattern": "^%[01]{1,8}$"
                }
            ]
        },
        "number_16bit": {
            "type": "string",
            "pattern": "^\\$[0-9A-F]{1,4}$"
        },
        "register": {
            "oneOf": [
                {
                    "$ref": "#/definitions/number_8bit"
                },
                {
                    "$ref": "#/definitions/address"
                }
            ]
        },
        "conditions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "register": {
                    "title": "Register",
                    "type": "object",
                    "minItems": 1,
                    "additionalProperties": false,
                    "properties": {
                        "A": {
                            "title": "Accumulator",
                            "$ref": "#/definitions/register"
                        },
                        "X": {
                            "title": "Index register X",
                            "$ref": "#/definitions/register"
                        },
                        "Y": {
                            "title": "Index register Y",
                            "$ref": "#/definitions/register"
                        },
                        "P": {
                            "title": "Processor status register",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "Negative": {
                                    "title": "Negative Flag",
                                    "type": "boolean"
                                },
                                "Overflow": {
                                    "title": "Overflow",
                                    "type": "boolean"
                                },
                                "Break": {
                                    "title": "Break Command",
                                    "type": "boolean"
                                },
                                "Decimal": {
                                    "title": "Decimal Mode Flag",
                                    "type": "boolean"
                                },
                                "InterruptDisable": {
                                    "title": "Interrupt Disable",
                                    "type": "boolean"
                                },
                                "Zero": {
                                    "title": "Zero Flag",
                                    "type": "boolean"
                                },
                                "Carry": {
                                    "title": "Carry Flag",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "memory": {
                    "title": "Memory",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/address"
                            }
                        ],
                        "anyOf": [
                            {
                                "required": [
                                    "value"
                                ]
                            },
                            {
                                "required": [
                                    "sequence"
                                ]
                            },
                            {
                                "required": [
                                    "readCount"
                                ]
                            },
                            {
                                "required": [
                                    "writeCount"
                                ]
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "address": {},
                            "label": {},
                            "offset": {},
                            "value": {
                                "title": "Memory value",
                                "description": "Memory value can be either the single value at the specified address or the values given in an array starting from the address.",
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/number_8bit"
                                    },
                                    {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                            "$ref": "#/definitions/number_8bit"
                                        }
                                    }
                                ]
                            },
                            "sequence": {
                                "title": "Memory sequence",
                                "description": "Memory sequence can be either the value array in the order of processing at the specified address, or the value arrays given in the two-dimensioned array starting from address.",
                                "type": "array",
                                "minItems": 1,
                                "oneOf": [
                                    {
                                        "items": {
                                            "$ref": "#/definitions/number_8bit"
                                        }
                                    },
                                    {
                                        "items": {
                                            "type": "array",
                                            "minItems": 1,
                                            "items": {
                                                "$ref": "#/definitions/number_8bit"
                                            }
                                        }
                                    }
                                ]
                            },
                            "readCount": {
                                "title": "Read count",
                                "description": "Read count specifies the number of times the read instruction(LDA, CMP, ...) for the specified address is executed.",
                                "oneOf": [
                                    {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                            "type": "number",
                                            "minimum": 0
                                        }
                                    }
                                ]
                            },
                            "writeCount": {
                                "title": "Write count",
                                "description": "Write count specifies the number of times the write instruction(STA, INC, ..) for the specified address is executed.",
                                "oneOf": [
                                    {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                            "type": "number",
                                            "minimum": 0
                                        }
                                    }
                                ]
                            },
                            "permanent": {
                                "title": "Permanent value",
                                "description": "Permanent value specifies whether or not the last value in read sequence queue will be used permanently.",
                                "type": "boolean"
                            }
                        },
                        "dependencies": {
                            "value": {
                                "properties": {
                                    "sequence": {
                                        "type": "null"
                                    }
                                }
                            },
                            "sequence": {
                                "properties": {
                                    "value": {
                                        "type": "null"
                                    }
                                }
                            }
                        }
                    }
                },
                "timeout": {
                    "title": "Timeout",
                    "description": "Timeout specifies whether or not the test will error on timeout.",
                    "type": "boolean"
                }
            },
            "dependencies": {
                "timeout": {
                    "properties": {
                        "register": {
                            "type": "null"
                        },
                        "memory": {
                            "type": "null"
                        }
                    }
                }
            }
        }
    }
}